{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8F95cA99C57959A613141912FF39EBA3b630Af0D",
      "txHash": "0x9b2a08db7742622b15e6c3e794bb97ec35ed0922d9e31b9de7cf23ce5f1ff6ca",
      "kind": "uups"
    },
    {
      "address": "0x1CF8e5e8F38799602C8A70Aa3Abb24956c3Ed2D3",
      "txHash": "0x6d1b34ad04468ef9b1aa2ed5e38671397f934bf081860aa62e47800a15c0f02a",
      "kind": "uups"
    },
    {
      "address": "0xe66d1bf6d2ebaD7b16B940e7cfA83473582001b0",
      "txHash": "0x92261a73fe3505ca0e017e53e9d56dff59136650fcda61f11be258dbbf539604",
      "kind": "uups"
    },
    {
      "address": "0xa2989aFce34F5D126858a39BA9409aDc115906A8",
      "txHash": "0x36ab9f5033c39fb06fa94df00f38ab8670d3b2a39b050d1da0d40555ef8f0a25",
      "kind": "uups"
    }
  ],
  "impls": {
    "731d764b130ffda4a2658bf00066287aaae33ff68d3a86c7f4d2c0ae49b948c1": {
      "address": "0xc92e9bD1404B67829bA1c70Ea357612Fe37FAc65",
      "txHash": "0x704cc97428689dc13ece7a3882994664c20b6d82aa1c9c76d66cf21ae4b7cf41",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "devWallet",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "FlowClicker",
            "src": "contracts/FlowClicker.sol:14"
          },
          {
            "label": "foundationWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "FlowClicker",
            "src": "contracts/FlowClicker.sol:15"
          },
          {
            "label": "launchTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "FlowClicker",
            "src": "contracts/FlowClicker.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)417_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "991e9273e3a963b2547127d62011f7ba37eb3bc26d25540e8705e3358ad595cf": {
      "address": "0x94F6C6c5ECb2C0188B8d00b8144Ad07A543C7D8D",
      "txHash": "0x4afd811a7796f315604ae2ec4accecf65f52402e518891ca49730513619bc426",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "devWallet",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "FlowClicker",
            "src": "contracts/FlowClicker.sol:17"
          },
          {
            "label": "foundationWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "FlowClicker",
            "src": "contracts/FlowClicker.sol:18"
          },
          {
            "label": "launchTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "FlowClicker",
            "src": "contracts/FlowClicker.sol:25"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlowClicker",
            "src": "contracts/FlowClicker.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)492_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)417_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7c35041a961237ab44181680f0b3d1dc424203352e2b519ec478bcde14df80d0": {
      "address": "0xFd1f155763d3fAe2a0c655B81fe51e3c262Ee370",
      "txHash": "0xe0ea3bbe4605225abcb57e6d0c879ebffd5a06590d9bb3923c0482676c339698",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "devWallet",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "FlowClicker",
            "src": "contracts/FlowClicker.sol:17"
          },
          {
            "label": "foundationWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "FlowClicker",
            "src": "contracts/FlowClicker.sol:18"
          },
          {
            "label": "launchTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "FlowClicker",
            "src": "contracts/FlowClicker.sol:25"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FlowClicker",
            "src": "contracts/FlowClicker.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)492_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)417_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
